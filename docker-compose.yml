version: '3'
services:

  flask:
    build:
      context: app
      dockerfile: Dockerfile

      # Note: If your service specifies a build option, variables defined in environment files are not automatically visible
      #  during the build. Use the args sub-option of build to define build-time environment variables.
      # Environment variables traverse through docker-compose.yml via .env file, then through "build: args" as build-time only
      #  environment variables and then assigned into ARG in Dockerfile and finally used as ${var_name} in the Dockerfile
      args:
        - MAINTAINER_NAME=${MAINTAINER_NAME}
        - FLASK_USER=${FLASK_USER}
        - FLASK_ID=${FLASK_ID}
        - FLASK_PORT=${FLASK_PORT}
        - FLASK_DEFAULT_IP_ADDRESS=${FLASK_DEFAULT_IP_ADDRESS}
        - FLASK_REMOTE_ROOT_DIR=${FLASK_REMOTE_ROOT_DIR}
        - FLASK_LOG_DIR=${FLASK_LOG_DIR}
    container_name: flask
    restart: unless-stopped
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_DEBUG: ${FLASK_DEBUG}
      FLASK_PORT: ${FLASK_PORT}
      FLASK_SEARCH: ${FLASK_SEARCH}
      FLASK_DEFAULT_IP_ADDRESS: ${FLASK_DEFAULT_IP_ADDRESS}
#      FLASK_REMOTE_ROOT_DIR: ${FLASK_REMOTE_ROOT_DIR}
      MONGODB_USER: ${MONGODB_USER}
      MONGODB_PWD: ${MONGODB_PWD}
      MONGODB_CLUSTER: ${MONGODB_CLUSTER}
      MONGODB_DB: ${MONGODB_DB}
      MONGODB_COLLECTION: ${MONGODB_COLLECTION}
      MONGODB_URI_PREFIX: ${MONGODB_URI_PREFIX}
      MONGODB_URI_SUFFIX: ${MONGODB_URI_SUFFIX}
      MONGODB_URI_EXTRA_PYTHON_SUFFIX: ${MONGODB_URI_EXTRA_PYTHON_SUFFIX}

#      MONGODB_DATA_DIR: ${MONGODB_DATA_DIR}
#      MONGODB_LOG_DIR: ${MONGODB_LOG_DIR}
      #MONGODB_HOSTNAME: mongodb
    volumes:
      - ./app:${FLASK_REMOTE_ROOT_DIR} #  for remote debugging purpose IN the container
      - flaskdata:${FLASK_LOG_DIR}
#      - ${MONGODB_HOST_DATA_DIR}:${MONGODB_DATA_DIR}
#      - ${FLASK_HOST_LOG_DIR}:${FLASK_DATA_DIR}
    networks:
      - frontend
#      - backend

  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
      args:
        - MAINTAINER_NAME=${MAINTAINER_NAME}
    container_name: webserver # If not specified, automatically named as #{PWD}_{this service name}
    restart: unless-stopped
#   environment:
#      APP_ENV: "prod"
#      APP_NAME: "webserver"
#      APP_DEBUG: "false"
#      SERVICE_NAME: "webserver"
    ports:
      - ${HOST_NGINX__PORT_1}:80 # CHANGE CONTAINER PORT NUMBER LATER -> ${HOST_NGINX__PORT_1}:80
      - ${HOST_NGINX__PORT_2}:443 # CHANGE CONTAINER PORT NUMBER LATER -> {HOST_NGINX__PORT_2}:443
    volumes:
      - nginxlog:${NGINX_LOG_DIR}

#      - web_static:${NGINX_LOG_DIR}
#      - ./nginx/conf.d:/etc/nginx/conf.d # Source full path name means "bind mount", not volume
    depends_on:
      - flask
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
#  backend:
#    driver: bridge


volumes:
  flaskdata:
    driver: local
    driver_opts:
      type: none #if "bind", then bind mount
      device: $PWD${FLASK_HOST_LOG_DIR} # must be an ABSOLUTE PATH
      o: bind

  nginxlog:
    driver: local
    driver_opts:
      type: none
      device: $PWD${NGINX_HOST_LOG_DIR} # must be an ABSOLUTE PATH
      o: bind